<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 会话Session ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>


	<!-- ************************ cookie ************************ -->
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的name，我故意取名叫xxxxbaidu -->
	    <constructor-arg value="dongnaoedu"/>
	    <property name="httpOnly" value="true"/>
	    <!-- cookie的有效时间 -->
	    <property name="maxAge" value="-1"/>
	</bean>
    

	<!-- ************************ cache ************************ -->
	<!-- 用户缓存 -->
	<bean id="customShiroCacheManager" class="com.dongnaoedu.mall.common.shiro.cache.CustomShiroCacheManager">
	    <property name="shiroCacheManager" ref="jedisShiroCacheManager"/>
	</bean>
	
	<!-- shiro 缓存实现，对ShiroCacheManager，我是采用redis的实现 -->
	<bean id="jedisShiroCacheManager" class="com.dongnaoedu.mall.common.shiro.cache.JedisShiroCacheManager">
	    <property name="jedisManager" ref="jedisManager"/>
	</bean>

	<!-- redis 的缓存 -->
	<bean id="jedisManager" class="com.dongnaoedu.mall.common.shiro.cache.JedisManager">
	    <property name="jedisPool" ref="jedisPool"/>
	</bean>
	
	
	<!-- ************************ session ************************ -->
	<!-- Session Manager -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 相隔多久检查一次session的有效性   -->
		<property name="sessionValidationInterval" value="1800000"/>
		<!-- session 有效时间为半小时 （毫秒单位）-->
		<property name="globalSessionTimeout" value="1800000"/>
		<property name="sessionDAO" ref="customShiroSessionDAO"/>
		<!-- session 监听，可以多个。 -->
		<property name="sessionListeners">
			<list>
				<ref bean="customSessionListener"/>
			</list>
		</property>
		<!-- 间隔多少时间检查，不配置是60分钟
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/> -->
		<!-- 是否开启 检测，默认开启 -->
		<property name="sessionValidationSchedulerEnabled" value="false"/>
		<!-- 是否删除无效的，默认也是开启 -->
		<property name="deleteInvalidSessions" value="false"/>
		<!-- 会话Cookie模板 -->
		<property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
	
	<!-- custom shiro session listener -->
	<bean id="customSessionListener" class="com.dongnaoedu.mall.common.shiro.sesion.CustomSessionListener">
		<property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
	</bean>
	
	<!-- custom shiro session dao -->
	<bean id="customShiroSessionDAO" class="com.dongnaoedu.mall.common.shiro.sesion.CustomShiroSessionDAO">
	    <property name="shiroSessionRepository" ref="jedisShiroSessionRepository"/>
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
	</bean>
	
	<!-- session 创建、删除、查询 -->
	<bean id="jedisShiroSessionRepository" class="com.dongnaoedu.mall.common.shiro.sesion.JedisShiroSessionRepository" >
		<property name="jedisManager" ref="jedisManager"/>
	</bean>
	
	
	<!-- ************************ shiro 核心功能配置 ************************ -->
    <!-- 配置自定义Realm -->
    <bean id="myRealm" class="com.dongnaoedu.mall.common.shiro.MyRealm"/>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm" />
        <!-- 可选项 最好使用,SessionDao,中 doReadSession 读取过于频繁了-->
        <property name="cacheManager" ref="customShiroCacheManager"/>
        <!--可选项 默认使用ServletContainerSessionManager，直接使用容器的HttpSession，可以通过配置sessionManager，使用DefaultWebSessionManager来替代-->
        <property name="sessionManager" ref="sessionManager"/>
        
    </bean>

    <bean id="perms" class="com.dongnaoedu.mall.common.shiro.MyPermissionFilter"/>

    <!-- Shiro过滤器 核心-->
    <bean id="shiroFilter" class="com.dongnaoedu.mall.common.shiro.MyShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 身份认证失败，则跳转到登录页面的配置 -->
        <property name="loginUrl" value="/login"/>
        <!-- 登录成功之后的 跳转页面 -->
        <property name="successUrl" value="/"/>
        <!-- 权限认证失败，则跳转到指定页面 -->
        <property name="unauthorizedUrl" value="/403"/>
        <!--自定义过滤器-->
        <property name="filters">
            <util:map>
                <entry key="perms" value-ref="perms"></entry>
                <entry key="roles" value-ref="perms"></entry>
            </util:map>
        </property>
        <!-- Shiro连接约束配置,即过滤链的定义 -->
        <property name="filterChainDefinitions">
            <value>
                <!--从数据库中读取-->
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    <!-- AOP式方法级权限检查 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
</beans>
